/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import DAO.ConexaoDAO;
import DAO.PecaDAO;
import DTO.pecaDTO;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;

/**
 *
 * @author andri
 */
public class CadastrarPecaGUI extends javax.swing.JFrame {

    /**
     * Creates new form CadastrarPecaGUI
     */
    public CadastrarPecaGUI() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        listarPecas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelNomePecaCadastrarPeca = new javax.swing.JLabel();
        jLabelCodigoPecaCadastrarPeca = new javax.swing.JLabel();
        jLabelDescricaoPecaCadastrarPeca = new javax.swing.JLabel();
        jLabelPrecoPecaCadastrarPeca = new javax.swing.JLabel();
        txtNomePecaCadastrarPeca = new javax.swing.JTextField();
        txtCodigoPecaCadastrarPeca = new javax.swing.JTextField();
        txtDescricaoPecaCadastrarPeca = new javax.swing.JTextField();
        txtPrecoPecaCadastrarPeca = new javax.swing.JTextField();
        jButtonLimparCadastrarPeca = new javax.swing.JButton();
        jButtonCadastrarPeca = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabelCadastrarPecaInserirSomenteNumero1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaPeca = new javax.swing.JTable();
        jButtonExluirItemTabelaCadastrarPeca = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        labelPecaBaixarEstoque = new javax.swing.JLabel();
        txtPecaBaixarEstoque = new javax.swing.JTextField();
        labelQuantidadeBaixarEstoque = new javax.swing.JLabel();
        txtQuantidadeBaixarEstoque = new javax.swing.JTextField();
        jButtonBaixarEstoque = new javax.swing.JButton();
        btnCarregarCampos = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtpeca = new javax.swing.JTextField();
        jLabelQuantidadePecaCadastrarPeca = new javax.swing.JLabel();
        txtQuantidadePecaCadastrarPeca = new javax.swing.JTextField();
        jButtonPesquisarPeca = new javax.swing.JButton();
        jLabelIDPecaCadastrarPeca = new javax.swing.JLabel();
        txtIDPecaCadastrarPeca = new javax.swing.JTextField();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastrar Peça");
        setMinimumSize(new java.awt.Dimension(570, 586));
        setResizable(false);

        jLabelNomePecaCadastrarPeca.setText("Nome da peça");

        jLabelCodigoPecaCadastrarPeca.setText("Código");

        jLabelDescricaoPecaCadastrarPeca.setText("Descrição");

        jLabelPrecoPecaCadastrarPeca.setText("Preço");

        txtNomePecaCadastrarPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomePecaCadastrarPecaActionPerformed(evt);
            }
        });

        txtCodigoPecaCadastrarPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoPecaCadastrarPecaActionPerformed(evt);
            }
        });

        txtDescricaoPecaCadastrarPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescricaoPecaCadastrarPecaActionPerformed(evt);
            }
        });

        txtPrecoPecaCadastrarPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecoPecaCadastrarPecaActionPerformed(evt);
            }
        });

        jButtonLimparCadastrarPeca.setText("Limpar Campos de Texto");
        jButtonLimparCadastrarPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparCadastrarPecaActionPerformed(evt);
            }
        });

        jButtonCadastrarPeca.setText("Cadastrar Peça");
        jButtonCadastrarPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrarPecaActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("CADASTRO DE PEÇAS - Todos os campos são obrigatórios");

        jLabelCadastrarPecaInserirSomenteNumero1.setText("Campo Preço: Insira Somente Números");

        TabelaPeca.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome da Peça", "Código", "Descrição", "Preço", "Quantidade"
            }
        ));
        jScrollPane1.setViewportView(TabelaPeca);

        jButtonExluirItemTabelaCadastrarPeca.setText("Excluir item ");
        jButtonExluirItemTabelaCadastrarPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExluirItemTabelaCadastrarPecaActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(235, 232, 232));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Baixar no Estoque");

        labelPecaBaixarEstoque.setText("Peça");

        labelQuantidadeBaixarEstoque.setText("Quantidade");

        jButtonBaixarEstoque.setText("Baixar no Estoque");
        jButtonBaixarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBaixarEstoqueActionPerformed(evt);
            }
        });

        btnCarregarCampos.setText("Carrecar Campos");
        btnCarregarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarCamposActionPerformed(evt);
            }
        });

        jLabel3.setText("ID Peca");

        txtpeca.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonBaixarEstoque)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCarregarCampos))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtpeca, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelQuantidadeBaixarEstoque, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelPecaBaixarEstoque, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPecaBaixarEstoque, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                .addComponent(txtQuantidadeBaixarEstoque, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addGap(17, 17, 17)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtpeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelPecaBaixarEstoque)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPecaBaixarEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(labelQuantidadeBaixarEstoque)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtQuantidadeBaixarEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBaixarEstoque)
                    .addComponent(btnCarregarCampos))
                .addGap(27, 27, 27))
        );

        jLabelQuantidadePecaCadastrarPeca.setText("Quantidade");

        jButtonPesquisarPeca.setText("Pesquisar");
        jButtonPesquisarPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarPecaActionPerformed(evt);
            }
        });

        jLabelIDPecaCadastrarPeca.setText("ID Peca");

        txtIDPecaCadastrarPeca.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelPrecoPecaCadastrarPeca)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabelNomePecaCadastrarPeca, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabelQuantidadePecaCadastrarPeca)
                                        .addComponent(jLabelIDPecaCadastrarPeca))
                                    .addComponent(jLabelCodigoPecaCadastrarPeca)
                                    .addComponent(jLabelDescricaoPecaCadastrarPeca))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabelCadastrarPecaInserirSomenteNumero1)
                                    .addComponent(txtDescricaoPecaCadastrarPeca, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                                    .addComponent(txtCodigoPecaCadastrarPeca)
                                    .addComponent(txtNomePecaCadastrarPeca)
                                    .addComponent(txtPrecoPecaCadastrarPeca)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonPesquisarPeca)
                                    .addComponent(jButtonCadastrarPeca, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonLimparCadastrarPeca, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonExluirItemTabelaCadastrarPeca, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtIDPecaCadastrarPeca, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtQuantidadePecaCadastrarPeca, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNomePecaCadastrarPeca)
                    .addComponent(txtNomePecaCadastrarPeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCodigoPecaCadastrarPeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelCodigoPecaCadastrarPeca))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelDescricaoPecaCadastrarPeca)
                            .addComponent(txtDescricaoPecaCadastrarPeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelPrecoPecaCadastrarPeca)
                            .addComponent(txtPrecoPecaCadastrarPeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelCadastrarPecaInserirSomenteNumero1)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelQuantidadePecaCadastrarPeca)
                            .addComponent(txtQuantidadePecaCadastrarPeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelIDPecaCadastrarPeca)
                            .addComponent(txtIDPecaCadastrarPeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addComponent(jButtonPesquisarPeca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCadastrarPeca)
                            .addComponent(jButtonLimparCadastrarPeca)
                            .addComponent(jButtonExluirItemTabelaCadastrarPeca))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomePecaCadastrarPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomePecaCadastrarPecaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomePecaCadastrarPecaActionPerformed

    private void txtCodigoPecaCadastrarPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoPecaCadastrarPecaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoPecaCadastrarPecaActionPerformed

    private void txtDescricaoPecaCadastrarPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescricaoPecaCadastrarPecaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescricaoPecaCadastrarPecaActionPerformed

    private void txtPrecoPecaCadastrarPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecoPecaCadastrarPecaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecoPecaCadastrarPecaActionPerformed

    private void jButtonLimparCadastrarPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparCadastrarPecaActionPerformed
        // TODO add your handling code here:
        txtNomePecaCadastrarPeca.setText("");
        txtCodigoPecaCadastrarPeca.setText("");
        txtDescricaoPecaCadastrarPeca.setText("");
        txtPrecoPecaCadastrarPeca.setText("");
        txtpeca.setText("");
        txtPecaBaixarEstoque.setText("");
        txtQuantidadeBaixarEstoque.setText("");

    }//GEN-LAST:event_jButtonLimparCadastrarPecaActionPerformed

    private void jButtonCadastrarPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrarPecaActionPerformed
        // TODO add your handling code here:
        // Obter os valores dos campos de texto
        String id = txtIDPecaCadastrarPeca.getText();
        String nome = txtNomePecaCadastrarPeca.getText();
        String codigo = txtCodigoPecaCadastrarPeca.getText();
        String descricao = txtDescricaoPecaCadastrarPeca.getText();
        String preco = txtPrecoPecaCadastrarPeca.getText();
        String quantidade = txtQuantidadePecaCadastrarPeca.getText();

        pecaDTO objpecadto = new pecaDTO();
        objpecadto.setNome_peca(nome);
        objpecadto.setCodigo(codigo);
        objpecadto.setDescricao(descricao);
        objpecadto.setPreco(preco);
        objpecadto.setQuantidade(quantidade);

        PecaDAO objpecadao = new PecaDAO();
        objpecadao.cadastrarpeca(objpecadto);

        if (nome.isEmpty() || codigo.isEmpty() || descricao.isEmpty() || preco.isEmpty() || quantidade.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Todos os campos são obrigatórios.");
            return;
        }

        // Converter o preço e quantidade para números
        double precoValue;
        int quantidadeValue;
        try {
            precoValue = Double.parseDouble(preco);
            quantidadeValue = Integer.parseInt(quantidade);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Preço e quantidade devem ser números válidos.");
            return;
        }

        // Adicionar uma nova linha à tabela
        DefaultTableModel model = (DefaultTableModel) TabelaPeca.getModel();
        model.addRow(new Object[]{id, nome, codigo, descricao, preco, quantidade});
        // Limpar os campos de texto
        txtIDPecaCadastrarPeca.setText("");
        txtNomePecaCadastrarPeca.setText("");
        txtCodigoPecaCadastrarPeca.setText("");
        txtDescricaoPecaCadastrarPeca.setText("");
        txtPrecoPecaCadastrarPeca.setText("");
        txtQuantidadePecaCadastrarPeca.setText("");

        //salvar bo banco

    }//GEN-LAST:event_jButtonCadastrarPecaActionPerformed

    private void jButtonExluirItemTabelaCadastrarPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExluirItemTabelaCadastrarPecaActionPerformed
        // TODO add your handling code here:
         
        if (TabelaPeca.getSelectedRow() != -1) {
            DefaultTableModel cadastroPecas = (DefaultTableModel) TabelaPeca.getModel();
            cadastroPecas.removeRow(TabelaPeca.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um cadastro para excluir");
        }
    }//GEN-LAST:event_jButtonExluirItemTabelaCadastrarPecaActionPerformed

    private void jButtonBaixarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBaixarEstoqueActionPerformed
        // TODO add your handling code here:
        // Obter os valores dos campos de texto
        String peca = txtPecaBaixarEstoque.getText();
        String quantidadeStr = txtQuantidadeBaixarEstoque.getText();

        // Verificar se os campos estão preenchidos
        if (peca.isEmpty() || quantidadeStr.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Todos os campos são obrigatórios.");
            return;
        }

        // Converter a quantidade para um número
        int quantidadeBaixar;
        try {
            quantidadeBaixar = Integer.parseInt(quantidadeStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Quantidade deve ser um número.");
            return;
        }

        // Atualizar a quantidade na tabela
        DefaultTableModel model = (DefaultTableModel) TabelaPeca.getModel();
        boolean found = false;
        for (int i = 0; i < model.getRowCount(); i++) {
            if (model.getValueAt(i, 1).equals(peca)) {
                int quantidadeAtual = Integer.parseInt(model.getValueAt(i, 5).toString());
                int novaQuantidade = quantidadeAtual - quantidadeBaixar;
                if (novaQuantidade < 0) {
                    JOptionPane.showMessageDialog(null, "Quantidade insuficiente em estoque.");
                    return;
                }
                model.setValueAt(novaQuantidade, i, 5);
                found = true;
                break;
            }
        }

        if (!found) {
            JOptionPane.showMessageDialog(null, "Peça não encontrada.");
        }

        // Limpar os campos de texto
        txtPecaBaixarEstoque.setText("");
        txtQuantidadeBaixarEstoque.setText("");

    }//GEN-LAST:event_jButtonBaixarEstoqueActionPerformed

    private void jButtonPesquisarPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarPecaActionPerformed
        // TODO add your handling code here:
        listarPecas();
    }//GEN-LAST:event_jButtonPesquisarPecaActionPerformed

    private void btnCarregarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregarCamposActionPerformed
        // TODO add your handling code here:
        CarregarCapos();
    }//GEN-LAST:event_btnCarregarCamposActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastrarPecaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastrarPecaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastrarPecaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastrarPecaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastrarPecaGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelaPeca;
    private javax.swing.JButton btnCarregarCampos;
    private javax.swing.JButton jButtonBaixarEstoque;
    private javax.swing.JButton jButtonCadastrarPeca;
    private javax.swing.JButton jButtonExluirItemTabelaCadastrarPeca;
    private javax.swing.JButton jButtonLimparCadastrarPeca;
    private javax.swing.JButton jButtonPesquisarPeca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelCadastrarPecaInserirSomenteNumero1;
    private javax.swing.JLabel jLabelCodigoPecaCadastrarPeca;
    private javax.swing.JLabel jLabelDescricaoPecaCadastrarPeca;
    private javax.swing.JLabel jLabelIDPecaCadastrarPeca;
    private javax.swing.JLabel jLabelNomePecaCadastrarPeca;
    private javax.swing.JLabel jLabelPrecoPecaCadastrarPeca;
    private javax.swing.JLabel jLabelQuantidadePecaCadastrarPeca;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelPecaBaixarEstoque;
    private javax.swing.JLabel labelQuantidadeBaixarEstoque;
    private javax.swing.JTextField txtCodigoPecaCadastrarPeca;
    private javax.swing.JTextField txtDescricaoPecaCadastrarPeca;
    private javax.swing.JTextField txtIDPecaCadastrarPeca;
    private javax.swing.JTextField txtNomePecaCadastrarPeca;
    private javax.swing.JTextField txtPecaBaixarEstoque;
    private javax.swing.JTextField txtPrecoPecaCadastrarPeca;
    private javax.swing.JTextField txtQuantidadeBaixarEstoque;
    private javax.swing.JTextField txtQuantidadePecaCadastrarPeca;
    private javax.swing.JTextField txtpeca;
    // End of variables declaration//GEN-END:variables

    private void listarPecas() {

        try {
            PecaDAO objpecadao = new PecaDAO();
            DefaultTableModel model = (DefaultTableModel) TabelaPeca.getModel();
            model.setNumRows(0);

            ArrayList<pecaDTO> lista = objpecadao.PesquisarPeca();

            for (int num = 0; num < lista.size(); num++) {
                model.addRow(new Object[]{
                    lista.get(num).getId_peca(),
                    lista.get(num).getNome_peca(),
                    lista.get(num).getCodigo(),
                    lista.get(num).getDescricao(),
                    lista.get(num).getPreco(),
                    lista.get(num).getQuantidade()
                });

            }

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Listar Valores views" + erro);
        }
    }
    
    private void CarregarCapos(){
        int setar = TabelaPeca.getSelectedRow();
        
        txtpeca.setText(TabelaPeca.getModel().getValueAt(setar, 0).toString());
        txtQuantidadeBaixarEstoque.setText(TabelaPeca.getModel().getValueAt(setar, 5).toString());
        txtPecaBaixarEstoque.setText(TabelaPeca.getModel().getValueAt(setar, 1).toString());
    }
    
    private void AlterarEstoque(){
        int id_Peca;
        String peca, quantidade;

        id_Peca = Integer.parseInt(txtpeca.getText());
        peca =  txtPecaBaixarEstoque.getText();
        quantidade = txtQuantidadeBaixarEstoque.getText();

        pecaDTO objpeca = new pecaDTO();

        objpeca.setId_peca(id_Peca);
        objpeca.setPeca(peca);
        objpeca.setQuantidade(quantidade);
        
        PecaDAO objpecadao = new PecaDAO();
        
        objpecadao.alterarpeca(objpeca);
        
    }
    
    
    
    

}
